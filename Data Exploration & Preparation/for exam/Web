from lxml import etree
import requests
from bs4 import BeautifulSoup as bs
from Orange.data import *


def getContent(link: str) -> str:
    webPage = requests.get(link)
    return str(bs(webPage.content, "html.parser"))


content: str = getContent("https://en.wikipedia.org/wiki/List_of_international_airports_by_country")
html: etree.ElementBase = etree.HTML(content)

print(html)

RELATIVE_ROOT: str = "//div[(@id='mw-content-text')]/div"
allNodes = html.xpath(RELATIVE_ROOT+"/*")
h2Count: int = 0
data = [[]]
i: int = 0
length: int = len(allNodes)

currentRegion: str = ""
currentSubRegion: str = ""
currentCountry: str = ""

while i < length:
    node: etree.ElementBase = allNodes[i]
    if node.tag == 'h2' and h2Count != 0:
        currentRegion = node.xpath("./span[@class='mw-headline'][1]")[0].text

    elif node.tag == 'h2':
        h2Count += 1
        i += 1
        continue
    if node.tag == 'h3':
        if i+1 < length:
            nextNode = allNodes[i + 1]
            if nextNode.tag == 'table':
                currentCountry = node.xpath("normalize-space(.//text())")
                currentSubRegion = ''
            elif nextNode.tag == 'h4':
                currentSubRegion = node.xpath("normalize-space(.//text())")
    if node.tag == 'h4':
        currentCountry = node.xpath("normalize-space(.//text())")
    if node.tag == 'table' and node.attrib['class'] == "wikitable":
        lines = node.xpath("./tbody/tr")
        for line in lines:
            cells = line.xpath("./td//text()")
            if len(cells) == 0:
                continue
            dataLine = [currentRegion, currentSubRegion, currentCountry]
            dataLine = ["N/A" if x == '' else x for x in dataLine]
            for cell in cells:
                if cell.strip() != '':
                    dataLine.append(cell.strip())
            
            data.append(dataLine)
    i += 1
data=data[1:] # remove first empty column
Region = StringVariable('Region')
SubRegion = StringVariable('SubRegion')
Country = StringVariable('Country')
City = StringVariable('City')
Airport = StringVariable('Airport name')
Code = StringVariable('IATA Code')


domain=Domain([], metas=[Region, SubRegion, Country, City,Airport,Code])
table = Table.from_list(domain, data)
out_data=table
